// <auto-generated />
using System;
using ControleFacil.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControleFacil.Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231003205939_CriarEntidadeAreceber")]
    partial class CriarEntidadeAreceber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControleFacil.Api.Damain.Models.Apagar", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataInativacao")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataPagamento")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataReferencia")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataVencimento")
                        .IsRequired()
                        .HasColumnType("timestamp");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<long>("idNaturezaDeLancamento")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("observacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<double>("valorOriginal")
                        .HasColumnType("double precision");

                    b.Property<double?>("valorPago")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.HasIndex("idNaturezaDeLancamento");

                    b.HasIndex("idUsuario");

                    b.ToTable("apagar", (string)null);
                });

            modelBuilder.Entity("ControleFacil.Api.Damain.Models.Areceber", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataInativacao")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataRecebimento")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataReferencia")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataVencimento")
                        .IsRequired()
                        .HasColumnType("timestamp");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<long>("idNaturezaDeLancamento")
                        .HasColumnType("bigint");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("observacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<double>("valorOriginal")
                        .HasColumnType("double precision");

                    b.Property<double?>("valorRecebido")
                        .IsRequired()
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.HasIndex("idNaturezaDeLancamento");

                    b.HasIndex("idUsuario");

                    b.ToTable("areceber", (string)null);
                });

            modelBuilder.Entity("ControleFacil.Api.Damain.Models.NaturezaDeLancamento", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("dataInativacao")
                        .HasColumnType("timestamp");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<long>("idUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("observacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.HasKey("id");

                    b.HasIndex("idUsuario");

                    b.ToTable("naturezaDeLancamento", (string)null);
                });

            modelBuilder.Entity("ControleFacil.Api.Damain.Models.Usuario", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.HasKey("id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("ControleFacil.Api.Damain.Models.Apagar", b =>
                {
                    b.HasOne("ControleFacil.Api.Damain.Models.NaturezaDeLancamento", "NaturezaDeLancamento")
                        .WithMany()
                        .HasForeignKey("idNaturezaDeLancamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleFacil.Api.Damain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NaturezaDeLancamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleFacil.Api.Damain.Models.Areceber", b =>
                {
                    b.HasOne("ControleFacil.Api.Damain.Models.NaturezaDeLancamento", "NaturezaDeLancamento")
                        .WithMany()
                        .HasForeignKey("idNaturezaDeLancamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleFacil.Api.Damain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NaturezaDeLancamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleFacil.Api.Damain.Models.NaturezaDeLancamento", b =>
                {
                    b.HasOne("ControleFacil.Api.Damain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
